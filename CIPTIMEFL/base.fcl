// Block definition (there may be more than one block per file)
FUNCTION_BLOCK Floggic

// Define input variables
VAR_INPUT
    Impact : REAL;
    Time : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    Impact_T : REAL;
END_VAR

// Fuzzify input variable 'Impact'
FUZZIFY Impact
//	TERM Very_Low := gbell 2 2 2; 
//	TERM Low := gbell 1 2 3;
//	TERM Medium :=  gbell 2 2 5;
//	TERM High :=  gbell 1 2 6;
//	TERM Very_High :=  gbell 2 2 8;

	TERM Very_Low := (0, 1) (1.5, 1) (2.5, 0.5) (5, 0.25) (6, 0) ; 
	TERM Low := (1, 0) (3.5, 1) (4, 0.25) (6, 0.25) (7, 0);
	TERM Medium := (2, 0) (4, 0.50) (5, 1) (6, 0.50) (8, 0);
	TERM High := (3, 0) (4, 0.25) (6.5, 1) (7, 0.50) (9, 0);
	TERM Very_High := (4, 0) (5, 0.25) (7, 1) (9, 1);
END_FUZZIFY

// Fuzzify input variable 'Time' in hours
FUZZIFY Time
    TERM Very_Early := (0, 1) (1, 1) (3, 1) (4, 0);
    TERM Early := (2, 0) (3, 1) (8, 1) (13, 0);
	TERM Medium := (8, 0) (12, 1) (37, 1) (49, 0);
	TERM Late := (37, 0) (49, 1) (144, 1) (169, 0);
	TERM Very_Late := (1, 0) (144, 0) (169, 1) (300, 1);
END_FUZZIFY

// Defuzzify output variable 'Impact_T'
DEFUZZIFY Impact_T
    TERM Very_Low := (0, 1) (3, 1) (5, 1) (6, 0) ; 
    TERM Low := (1, 0) (2, 1) (4, 1) (6, 1) (7, 0);
    TERM Medium := (2, 0) (3, 1) (5, 1) (7, 1) (8, 0);
	TERM High := (3, 0) (4, 1) (6, 1) (8, 0) (9, 0);
	TERM Very_High := (4, 0) (5, 1) (7, 1) (9, 1);
    
	// Use 'RightMostMempership' defuzzification method, since we need the worst-case scenario
    METHOD : RM;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	RULE 1 : IF Impact IS Very_High AND Time IS Very_Early THEN Impact_T is Medium;
	RULE 2 : IF Impact IS Very_High AND Time IS Early THEN Impact_T is High;
	RULE 3 : IF Impact IS Very_High AND Time IS Medium THEN Impact_T is High;
	RULE 4 : IF Impact IS Very_High AND Time IS Late THEN Impact_T is Very_High;
	RULE 5 : IF Impact IS Very_High AND Time IS Very_Late THEN Impact_T is Very_High;
	RULE 6 : IF Impact IS High AND Time IS Very_Early THEN Impact_T is Low;
	RULE 7 : IF Impact IS High AND Time IS Early THEN Impact_T is Medium;
	RULE 8 : IF Impact IS High AND Time IS Medium THEN Impact_T is High;
	RULE 9 : IF Impact IS High AND Time IS Late THEN Impact_T is High;
	RULE 10 : IF Impact IS High AND Time IS Very_Late THEN Impact_T is Very_High;
	RULE 11 : IF Impact IS Medium AND Time IS Very_Early THEN Impact_T is Very_Low;
	RULE 12 : IF Impact IS Medium AND Time IS Early THEN Impact_T is Low;
	RULE 13 : IF Impact IS Medium AND Time IS Medium THEN Impact_T is Medium;
	RULE 14 : IF Impact IS Medium AND Time IS Late THEN Impact_T is High;
	RULE 15 : IF Impact IS Medium AND Time IS Very_Late THEN Impact_T is Very_High;
	RULE 16 : IF Impact IS Low AND Time IS Very_Early THEN Impact_T is Very_Low;
	RULE 17 : IF Impact IS Low AND Time IS Early THEN Impact_T is Very_Low;
	RULE 18 : IF Impact IS Low AND Time IS Medium THEN Impact_T is Low;
	RULE 19 : IF Impact IS Low AND Time IS Late THEN Impact_T is Medium;
	RULE 20 : IF Impact IS Low AND Time IS Very_Late THEN Impact_T is High;
	RULE 21 : IF Impact IS Very_Low AND Time IS Very_Early THEN  Impact_T is Very_Low;
	RULE 22 : IF Impact IS Very_Low AND Time IS Early THEN Impact_T is Very_Low;
	RULE 23 : IF Impact IS Very_Low AND Time IS Medium THEN Impact_T is Very_Low;
	RULE 24 : IF Impact IS Very_Low AND Time IS Late THEN Impact_T is Medium;
	RULE 25 : IF Impact IS Very_Low AND Time IS Very_Late THEN Impact_T is High;

END_RULEBLOCK

END_FUNCTION_BLOCK